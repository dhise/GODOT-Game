#TODO I want to add health to player so that he can take hits before dying as of right now the player scene is completely finished and the game plays start to finish from scoring to dying
#Includes an image of scene branch at the bottom


extends CharacterBody3D

#emits when player is hit by mob
signal hit



#how fast the player moves in meters per second.
@export var speed = 14
#the downward acceleration when in the air in meters per second squared
@export var fall_acceleration = 75
#speed at which player jumps up
@export var jump_impulse = 20
#vertical impulse upon landing on a mob and bouncing in meters per second
@export var bounce_impulse = 16

var target_velocity = Vector3.ZERO


# func _physics_process(delta):   updates physics related code every frame
func _physics_process(delta):
	var direction = Vector3.ZERO
	
	#checking for each move input and update direction accordingly
	if Input.is_action_pressed("move_right"):
		direction.x += 1
	if Input.is_action_pressed("move_left"):
		direction.x -= 1
	if Input.is_action_pressed("move_back"):
		direction.z += 1
	if Input.is_action_pressed("move_forward"):
		direction.z -= 1


	#normalize movement so that diagnol movement isn't faster I.E. pressing two movement keys at once like forward and right
	if direction != Vector3.ZERO:
		direction = direction.normalized()
		#setting the basis property will affect rotation of node
		$Pivot.basis = Basis.looking_at(direction) #looking_at will point z coordinate towards target
	
	#ground velocity
	target_velocity.x = direction.x * speed
	target_velocity.z = direction.z * speed
	
	#vertical velocity
	if not is_on_floor(): #if in the air then fall towards the floor  this is gravity
		target_velocity.y = target_velocity.y - (fall_acceleration * delta)
	
	#jumping
	if is_on_floor() and Input.is_action_pressed("jump"):
		target_velocity.y = jump_impulse
	
	#okay big code time
	#iterate through all collisions that occured this frame
	for index in range(get_slide_collision_count()):
		#we get one of the collisions with player
		var collision = get_slide_collision(index)
		
		#if collision is with ground
		if collision.get_collider() == null:
			continue
			
		#if the collider is with a mob
		if collision.get_collider().is_in_group("mob"):#mob node -> node -> group -> mob    created mob group on mob node 
			var mob = collision.get_collider()
			#check if we are hitting it from above
			if Vector3.UP.dot(collision.get_normal()) > 0.1:
				#if colliding with mob from above, call squash function and then bounce
				mob.squash()
				target_velocity.y = bounce_impulse#var for a vertical jump that's less than regular jump created at top
				#ends loop as to not make duplicate calls
				break
	
	#moving the character
	velocity = target_velocity
	

	move_and_slide()


func die():
	hit.emit()
	queue_free()


func _on_mob_detector_body_entered(body):
	die()




#end of player script 

#image of player nodes

https://raw.githubusercontent.com/dhise/GODOT-Game/main/3dgame/playernodes.png



